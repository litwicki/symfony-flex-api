=======
FORMAT: 1A
HOST: http://api.tavro.dev/api/v1

# Tavro.io API

Private API Documentation.

# Data Structures

## Account1 (object)
+ id: 10001 (number)
+ status: 1 (number)
+ name: Autobots
+ name_clean: autobots
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## Account2 (object)
+ id: 10002 (number)
+ status: 1 (number)
+ name: Decepticons
+ name_clean: decepticons
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountGroup1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ name: Primes
+ account (Account1)
+ user (User1)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountGroup2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ name: Leaders
+ account (Account2)
+ user (User1)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountGroup3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ name: Cars
+ account (Account1)
+ user (User2)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountUser1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ account (Account1)
+ user (User1)

## AccountUser2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ user (User2)

## AccountUser3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ user (User3)

## AccountGroupUser1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account_group (AccountGroup1)
+ user (User1)

## AccountGroupUser2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account_group (AccountGroup2)
+ user (User2)

## AccountGroupUser3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account_group (AccountGroup3)
+ user (User3)

## RoleAdmin (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: Administrator (string, required)
+ role: ROLE_ADMIN (string, required)
+ body: Administrators do what they want! (string, required)

## RoleUser (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: User (string, required)
+ role: ROLE_USER (string, required)
+ body: Users do what they want! (string, required)

## RoleDeveloper (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: Developer (string, required)
+ role: ROLE_DEVELOPER (string, required)
+ body: Developers do what they want! (string, required)

## Comment1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ user (User1)
+ body: "Before time began, there was the Cube. We know not where it comes from, only that it holds the power to create worlds and fill them with life. That is how our race was born. For a time, we lived in harmony. But like all great power, some wanted it for good, others for evil. And so began the war. A war that ravaged our planet until it was consumed by death, and the Cube was lost to the far reaches of space. We scattered across the galaxy, hoping to find it and rebuild our home. Searching every star, every world. And just when all hope seemed lost, message of a new discovery drew us to an unknown planet called... Earth."

## Comment2 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ user (User2)
+ body: "Legendary warriors, the powers that created us now want us all extinguished. We must join forces, or else we'll all be their slaves. So today you stand with us... or you stand against me."

## Comment3 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ user (User3)
+ body: "There are mysteries to the universe we were never meant to solve. But who we are and why we are here, are not among them. Those answers we carry inside. I am Optimus Prime, and this message is to my Creators: leave planet Earth alone, 'cause I'm coming for you!"

## Contact1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ job_title: Job Title
+ email: null
+ phone: null
+ user (User1)
+ organization (Organization1)
+ person (Person1)

## Contact2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ job_title: Executive
+ email: exec@example.com
+ phone: null
+ user: null
+ organization (Organization1)
+ person (Person2)

## Contact3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ job_title: Mechanic
+ email: mechanic@gmail.com
+ phone: null
+ user (User3)
+ organization (Organization2)
+ person (Person3)

## Expense1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ body: "The explanation of reason for the expense" (string)
+ amount: 154.89
+ user (User1)
+ category (ExpenseCategory1)
+ receipt (File1)
+ comments (array[Comment1])
+ tags (array[Tag1, Tag2])

## Expense2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ body: "" (string)
+ amount: 12.99
+ user (User2)
+ category (ExpenseCategory2)
+ receipt (File2)
+ comments (array[Comment2, Comment3])
+ tags (array[])

## Expense3 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ body: "Subscription to Apple Music" (string)
+ amount: 14.99
+ user (User2)
+ category (ExpenseCategory3)
+ receipt (File3)
+ comments (array[])
+ tags (array[])

## ExpenseCategory1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Expense Category Name"
+ account (Account1)

## ExpenseCategory2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Another Expense Category Name"
+ account (Account1)

## ExpenseCategory3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Category Name"
+ account (Account2)

## File1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-files.amazons3.com/10001/funding/prospectus.pdf" (string, required)
+ bucket: "tavro-files" (string, required)
+ directory: "funding" (string)
+ original_filename: "Untitled-1.pdf" (string, required)
+ mime_type: "application/pdf" (string, required)
+ filesize: 1234567890 (number, required)

## File2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-assets.amazons3.com/resumes/resume-123456.pdf" (string, required)
+ bucket: "tavro-assets" (string, required)
+ directory: "resumes" (string)
+ original_filename: "resume.pdf" (string, required)
+ mime_type: "application/pdf" (string, required)
+ filesize: 54678765 (number, required)

## File3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-assets.amazons3.com/header.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "" (string)
+ original_filename: "Mt-Rainier0234.jpeg" (string, required)
+ mime_type: "application/jpeg" (string, required)
+ filesize: 20394029384 (number, required)

## File4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-files.amazons3.com/10002/funding/prospectus2.pdf" (string, required)
+ bucket: "tavro-files" (string, required)
+ directory: "funding2" (string)
+ original_filename: "Company-Prospectus.pdf" (string, required)
+ mime_type: "application/pdf" (string, required)
+ filesize: 69876789098 (number, required)

## Forecast1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ expenses (array[ForecastExpense1])
+ revenues (array[ForecastRevenue1])
+ staff (array[ForecastStaffPerson1])
+ user (User1)

## Forecast2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ expenses (array[ForecastExpense2])
+ revenues (array[ForecastRevenue2])
+ staff (array[ForecastStaffPerson2])
+ user (User1)

## Forecast3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ expenses (array[ForecastExpense3])
+ revenues (array[ForecastRevenue3])
+ staff (array[ForecastStaffPerson3])
+ user (User2)

## ForecastExpense1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast1)
+ category (ExpenseCategory1)
+ amount: 99.99 (number, required)

## ForecastExpense2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast2)
+ category (ExpenseCategory1)
+ amount: 12.99 (number, required)

## ForecastExpense3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast3)
+ category (ExpenseCategory2)
+ amount: 1099.99 (number, required)

## ForecastRevenue1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast1)
+ category (RevenueCategory1)
+ qty: 1000 (number, required)
+ unit_amount: 100 (number, required)

## ForecastRevenue2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast2)
+ category (RevenueCategory2)
+ qty: 10 (number, required)
+ unit_amount: 10000 (number, required)

## ForecastRevenue3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast3)
+ category (RevenueCategory1)
+ qty: 1000 (number, required)
+ unit_amount: 100 (number, required)

## ForecastStaffPerson1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast1)
+ job_title: "Job Title" (string, required)
+ starting_salary: 60000 (number, required)

## ForecastStaffPerson2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast2)
+ job_title: "Manager" (string, required)
+ starting_salary: 90000 (number, required)

## ForecastStaffPerson3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ forecast (Forecast3)
+ job_title: "Staff" (string, required)
+ starting_salary: 50000 (number, required)

## Funding1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ type: "Seed" (string, required)
+ total_shares 1000000 (number, required)
+ share_price: 1.00 (number, required)
+ prospectus (File1)
+ comments (array[])
+ shareholders (array[Shareholder1, Shareholder2])

## Funding2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ type: "Angel" (string, required)
+ total_shares 1000 (number, required)
+ share_price: 100.00 (number, required)
+ prospectus (File4)
+ comments (array[Comment1, Comment2])
+ shareholders (array[Shareholder3, Shareholder4, Shareholder5])

## Image1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-assets.amazons3.com/10001/products/00001.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "products" (string)
+ original_filename: "Picture1.jpeg" (string, required)
+ mime_type: "application/jpeg" (string, required)
+ filesize: 20394029384 (number, required)
+ height: 100 (number, required)
+ width: 100 (number, required)

## Image2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-assets.amazons3.com/10001/products/00002.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "products" (string)
+ original_filename: "Picture2.png" (string, required)
+ mime_type: "application/png" (string, required)
+ filesize: 20394029384 (number, required)
+ height: 100 (number, required)
+ width: 100 (number, required)

## Image3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-assets.amazons3.com/10001/services/service1.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "services" (string)
+ original_filename: "SERVICE_IMAGE.jpg" (string, required)
+ mime_type: "application/jpg" (string, required)
+ filesize: 4562343534 (number, required)
+ height: 1000 (number, required)
+ width: 1000 (number, required)

## Image4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-assets.amazons3.com/10002/products/product-img01.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "products" (string)
+ original_filename: "product.jpg" (string, required)
+ mime_type: "application/jpg" (string, required)
+ filesize: 10876789 (number, required)
+ height: 1200 (number, required)
+ width: 760 (number, required)

## Node1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ user (User1)
+ title: "Node Title" (string, required)
+ body: "Lots of text here.." (string)
+ type: "node" (string, required)
+ display_date: `2015-08-05T08:40:51.620Z` (string, required)
+ views: 0 (number, required)
+ comments (array[Comment1, Comment2])

## Node2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ user (User3)
+ title: "Node Title" (string, required)
+ body: "Lots of text here.." (string)
+ type: "node" (string, required)
+ display_date: `2015-08-05T08:40:51.620Z` (string, required)
+ views: 23423 (number, required)
+ comments (array[Comment3])

## Node3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ user (User2)
+ title: "Node Title" (string, required)
+ body: "Lots of text here.." (string)
+ type: "node" (string, required)
+ display_date: `2015-08-05T08:40:51.620Z` (string, required)
+ views: 100 (number, required)
+ comments (array[])

## Organization1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ hubspot_id: 2039842 (number)
+ name: "Organization Name" (string)
+ description: "Organization description text" (string)
+ website: "http://example.org" (string)
+ address: "123 Main Street" (string)
+ address2: "" (string)
+ city: "New York" (string)
+ state: "New York" (string)
+ zip: 10001 (number)
+ phone: `(123) 456-7890` (string)
+ comments (array[])

## Organization2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ hubspot_id: null)
+ name: "Org Name" (string)
+ description: "Organization description text" (string)
+ website: "http://example.org" (string)
+ address: "1100 5th Ave" (string)
+ address2: "" (string)
+ city: "New York" (string)
+ state: "New York" (string)
+ zip: 10001 (number)
+ phone: `(224) 984-2344` (string)
+ comments (array[])

## Organization3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ hubspot_id: null)
+ name: "Org Name" (string)
+ description: "Organization description text" (string)
+ website: "http://example.org" (string)
+ address: "555 Sunset Blvd" (string)
+ address2: "" (string)
+ city: "Los Angeles" (string)
+ state: "California" (string)
+ zip: 90064 (number)
+ phone: `(310) 555-1234` (string)
+ comments (array[])

## Person1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ first_name: "Optimus" (string)
+ middle_name: null (string)
+ last_name: "Prime" (string)
+ suffix: null (string)
+ gender: "Male" (string)
+ birthday: `2012-11-09T08:40:51.620Z` (string, required)
+ address: "25001 King Drive" (string)
+ address2: "" (string)
+ city: "Bellevue" (string)
+ state: "Washington" (string)
+ zip: 98034 (number)
+ phone: `(425) 234-4442` (string)
+ email: "person1@example.com" (string)
+ user (User1)

## Person2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ first_name: "Megatron" (string)
+ middle_name: null (string)
+ last_name: "" (string)
+ suffix: null (string)
+ gender: "Male" (string)
+ birthday: `2009-02-03T08:40:51.620Z` (string, required)
+ address: "513 3rd Ave" (string)
+ address2: "" (string)
+ city: "Seattle" (string)
+ state: "Washington" (string)
+ zip: 98042 (number)
+ phone: `425-676-6674` (string)
+ email: "person2@example.com" (string)
+ user (User2)

## Person3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ first_name: "Bumblebee" (string)
+ middle_name: null (string)
+ last_name: "" (string)
+ suffix: null (string)
+ gender: "Female" (string)
+ birthday: `1999-06-03T08:40:51.620Z` (string, required)
+ address: "25001 King Drive" (string)
+ address2: "" (string)
+ city: "Maple Valley" (string)
+ state: "Washington" (string)
+ zip: 98038 (number)
+ phone: `206-234-4442` (string)
+ email: "person3@example.com" (string)
+ user: null

## Product1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Something cool" (string, required)
+ price: 99 (number, required)
+ cost: 50 (number, required)
+ category (ProductCategory1)
+ images (array[Image3, Image4])

## Product2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "A thingamajig" (string, required)
+ price: 125.95 (number, required)
+ cost: 56.95 (number, required)
+ category (ProductCategory2)
+ images (array[Image1])

## Product3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Another Product Name" (string, required)
+ price: 199.95 (number, required)
+ cost: 179.99 (number, required)
+ category (ProductCategory3)
+ images (array[])

## ProductCategory1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "A Product Category" (string)
+ account (Account1)

## ProductCategory2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Another product category" (string)
+ account (Account1)

## ProductCategory3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Hot Sellers" (string)
+ account (Account2)

## ProductCategory4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Cool Products" (string)
+ account (Account2)

## Revenue1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ body: "Description of this revenue item" (string)
+ type: "consulting" (string)
+ user (User1)
+ category (RevenueCategory1)
+ products (array[])
+ services (array[])
+ tags (array[Tag1, Tag2])

## Revenue2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ body: "Description of this revenue item" (string)
+ type: "sale" (string)
+ user (User2)
+ category (RevenueCategory1)
+ products (array[Product3])
+ services (array[])
+ tags (array[Tag3])

## RevenueCategory1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Annual Services" (string)
+ account (Account1)

## RevenueCategory2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "SaaS" (string)
+ account (Account1)

## RevenueCategory3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Consulting" (string)
+ account (Account2)

## RevenueCategory4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Subscription" (string)
+ account (Account2)

## AdminRole (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ role: "ROLE_ADMIN" (string, required)
+ name: "Administrator" (string, required)

## DeveloperRole (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ role: "ROLE_DEVELOPER" (string, required)
+ name: "Developer" (string, required)

## UserRole (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ role: "ROLE_USER" (string, required)
+ name: "User" (string, required)

## Service1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "QA Work" (string, required)
+ body: "Service description..."
+ type: "hourly" (string, required)
+ price: 100 (number, required)
+ account (Account1)
+ images (array[])

## Service2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Service" (string, required)
+ body: "Service description..."
+ type: "retainer" (string, required)
+ price: 10000 (number, required)
+ account (Account1)
+ images (array[Image2])

## Service3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Softare Development" (string, required)
+ body: "Service description..."
+ type: "hourly" (string, required)
+ price: 250 (number, required)
+ account (Account2)
+ images (array[])

## ServiceCategory1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Service Category" (string)
+ account (Account1)

## ServiceCategory2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Hourly" (string)
+ account (Account1)

## ServiceCategory3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Consulting" (string)
+ account (Account2)

## ServiceCategory4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Retainer" (string)
+ account (Account2)

## Shares1 (object)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ shares 123 (number, required)
+ funding_round (Funding1)

## Shares2 (object)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ shares 535 (number, required)
+ funding_round (Funding1)

## Shares3 (object)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ shares 234 (number, required)
+ funding_round (Funding1)

## Shares4 (object)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ shares 5666 (number, required)
+ funding_round (Funding2)

## Shares5 (object)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ shares 988 (number, required)
+ funding_round (Funding2)

## Shareholder1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person1)
+ shares (array[Shares1, Shares2])

## Shareholder2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person2)
+ shares (array[Shares3, Shares4])

## Shareholder3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person1)
+ shares (array[Shares5])

## Shareholder4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person1)
+ shares (array[])

## Shareholder5 (object)
+ id: 5 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person1)
+ shares (array[])

## Syndicate1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Syndicate Name" (string, required)
+ leader (User2)
+ investors (array[User1, User2, User3])

## Syndicate2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Syndicate Name" (string, required)
+ leader (User1)
+ investors (array[User1])

## Syndicate3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: "Syndicate Name" (string, required)
+ leader (User3)
+ investors (array[User1, User3])

## Tag1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ tag: "robot" (string, required)

## Tag2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ tag: "hasbro" (string, required)

## Tag3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ tag: "tag text" (string, required)

## Tag4 (object)
+ id: 4 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ tag: "tag" (string, required)

## User1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ username: "optimus_prime" (string, required)
+ api_key: "" (string, required)
+ api_enabled: true (boolean, required)
+ signature: "Autobots, Assemble!"
+ last_online_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person1)
+ roles (array[AdminRole, DeveloperRole])

## User2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ username: "megatron" (string, required)
+ api_key: "" (string, required)
+ api_enabled: true (boolean, required)
+ signature: "Kill All The Humans!"
+ last_online_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person2)
+ roles (array[DeveloperRole])

## User3 (object)
+ id: 3 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ username: "bumblebee" (string, required)
+ api_key: "" (string, required)
+ api_enabled: true (boolean, required)
+ signature: "Go Autobots!!!"
+ last_online_date: `2015-08-05T08:40:51.620Z` (string, required)
+ person (Person3)
+ roles (array[UserRole])

## Variable1 (object)
+ id: 1 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "7a2349ba-5a08-4f95-8c59-ef7c74ff1ede" (string, required)
+ name: "hubspot.hapikey" (string, required)

## Variable2 (object)
+ id: 2 (number)
+ status: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "02af40aa-206b-4d47-b7f3-b66590df31fa" (string, required)
+ name: "freshbooks.account_id" (string, required)

## Account [/accounts]

### GET [GET /accounts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Account1)
        + message: {ACCOUNT_NAME} retrieved successfully.

### Create new Account [POST /accounts]

+ Request (application/json)
    + Headers
        Authorization: Bearer {JSON_WEB_TOKEN}
        
    + Body
        {
            "body": "Account Name",
            "user": 1
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Account1)
        + message: {ACCOUNT_NAME} created successfully.

### Edit [PATCH /accounts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "Account Name",
            "status": 1,
            "user": 1
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Account1)
        + message: {ACCOUNT_NAME} updated successfully.

### Delete [DELETE /accounts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer
    
+ Response 200 (application/json)
    + Attributes
        + message: {ACCOUNT_NAME} removed successfully.

### Add User [POST /accounts/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "Account Name",
            "user": 1,
            "status": 1
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Account1)
        + message: {USER_NAME} added successfully.

### Get Users [GET /accounts/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[User1, User2])

### Remove User [DELETE /accounts/{account_id}/users/{user_id}]

+ Parameters
    + account_id: `1` (number, required) - ID of the Account in the form of an integer
    + user_id: `1` (number, required) - ID of the User in the form of an integer

+ Response 204 (application/json)

Virtually all entities are related to a particular `Account` and as such retrieving "all" records of a specific type funnels through the `account_id` in question.

### Get Groups [GET /accounts/{id}/groups]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (AccountGroup1)
            + (AccountGroup2)
        + message: {GROUP_COUNT} Groups retrieved successfully.

### Get Contacts [GET /accounts/{id}/contacts]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Contact1)
            + (Contact2)
        + message: {CONTACT_COUNT} Contacts retrieved successfully.

### Get Organizations [GET /accounts/{id}/groups]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (AccountGroup1)
            + (AccountGroup2)
        + message: {GROUP_COUNT} Groups retrieved successfully.

### Get Nodes [GET /accounts/{id}/nodes]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Node1)
            + (Node2)
        + message: {ITEM_COUNT} Nodes retrieved successfully.

### Get Expenses [GET /accounts/{id}/expenses]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Expense1)
            + (Expense2)
        + message: {ITEM_COUNT} Expenses retrieved successfully.

### Get Funding [GET /accounts/{id}/funding]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Funding1)
            + (Funding2)
        + message: {FUNDING_COUNT} Funding rounds retrieved successfully.

### Get Products [GET /accounts/{id}/products]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Product1)
            + (Product2)
        + message: {ITEM_COUNT} Products retrieved successfully.

### Get Revenue [GET /accounts/{id}/revenue]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Revenue1)
            + (Revenue2)
        + message: {ITEM_COUNT} Revenues retrieved successfully.

### Get Services [GET /accounts/{id}/services]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Service1)
            + (Service2)
        + message: {ITEM_COUNT} Services retrieved successfully.

### Get Shareholders [GET /accounts/{id}/shareholders]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Shareholder1)
            + (Shareholder2)
        + message: {ITEM_COUNT} Shareholders retrieved successfully.

## Comment [/comments]

Comments are created via `POST` to the object the comment is being submitted to.

### Edit Comment [PATCH /comments/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Comment in the form of an integer

+ Request (application/json)

        {
            "body": "This round of funding is exclusive to friends and family.",
            "status": 1
        }

+ Response 204 (application/json)

### Delete Comment [DELETE /comments/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Comment in the form of an integer

+ Response 204 (application/json)

## Contact [/contacts]

### Get All Contacts [GET]

+ Response 200 (application/json)

    + Attributes
        + data (array) - Response data
            + (Contact1)
            + (Contact2)
        + message: {CONTACT_NAME} retrieved successfully; last updated {UPDATE_DATE}.

### Get Contact [GET /contacts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Contact in the form of an integer

+ Response 200 (application/json)

    + Attributes
        + data (array) - Response data
            + (Contact1)
        + message: {CONTACT_NAME} retrieved successfully; last updated {UPDATE_DATE}.

### Create new Contact [POST]

+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "CEO",
            "address": "123 Main St",
            "address2": "",
            "city": "Maple Valley",
            "state": "WA",
            "zip": "98065",
            "email": "jane.doe@gmail.com",
            "phone": "555-867-5309",
            "user": 1,
            "account": 1
        }

+ Response 200 (application/json)

    + Attributes
        + data (array) - Response data
            + (Contact1)
        + message: {CONTACT_NAME} created successfully.

### Edit Contact [PATCH /contacts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Contact in the form of an integer

+ Request (application/json)

        {
            "status": 1
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "CEO",
            "address": "123 Main St",
            "address2": "",
            "city": "Maple Valley",
            "state": "WA",
            "zip": "98065",
            "email": "jane.doe@gmail.com",
            "phone": "555-867-5309",
            "user": 1,
            "account": 1
        }

+ Response 200 (application/json)

    + Attributes
        + data (array) - Response data
            + (Contact1)
        + message: {CONTACT_NAME} retrieved successfully; last updated {UPDATE_DATE}.

### Delete Contact [DELETE /contacts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Contact in the form of an integer

+ Attributes
    + data (array) - Response data
        + (Contact1)
    + message: {CONTACT_NAME} removed successfully.

## Expense [/expenses]

### Get Expense [GET /expenses/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Expense in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Expense1)
        + message: {EXPENSE_NAME} retrieved successfully.

### Create Expense [POST]

+ Request (application/json)

        {
            "body": "Apiary for teams",
            "amount": 1.00
            "expense_date": "2009-02-03",
            "category": 3,
            "organization": 10
            "organization": 1
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Expense1)
        + message: {EXPENSE_NAME} created successfully.

### Delete Expense [DELETE /expenses/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Expense in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {EXPENSE_NAME} removed successfully.

### Tag [POST /expenses/{id}/tags]

+ Parameters
    + id: `1` (number, required) - ID of the Expense in the form of an integer

+ Request (application/json)

        {
            "tag": "lowercased"
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Expense1)
        + message: {EXPENSE_NAME} removed successfully.

## File [/files]

### Create new File [POST /files]

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="files[file]"; filename="document.pdf"
        Content-Type: applicationpdf
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (File1)
        + message: {FILE_COUNT} retrieved successfully.

### Edit File [PUT /files]

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="files[file]"; filename="document.pdf"
        Content-Type: applicationpdf
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (File1)
        + message: {FILE_COUNT} retrieved successfully.

### Get File [GET /files/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the File in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (File1)
        + message: {FILE_NAME} retrieved successfully.

### Delete File [DELETE /files/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the File in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {FILE_NAME} removed successfully.

## Forecast [/forecast]

### View Forecast [GET /forecast/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Forecast in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Forecast1)
        + message: {REVENUE_NAME} retrieved successfully.

### Create new Forecast [POST /forecast]

+ Request (application/json)

        {
            "title": "Our first sale!",
            "body": "This is our first official product sale as a new business!",
            "category": 1,
            "organization": 1,
            "user": 43
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Forecast1)
        + message: {REVENUE_NAME} created successfully.

### Edit Forecast [PATCH /forecast/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Forecast in the form of an integer

+ Request (application/json)

        {
            "title": "Our first sale!",
            "body": "This is our first official product sale as a new business!",
            "category": 1,
            "organization": 1,
            "user": 43
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Forecast1)
        + message: {REVENUE_NAME} updated successfully.

### Delete Forecast [DELETE /forecast/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Forecast in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {REVENUE_NAME} removed successfully.


## Funding [/funding]

### Get Funding [GET /funding/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Funding in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Funding1)
        + message: {FUNDING_NAME} retrieved successfully.

### Create Funding [POST]

+ Request (application/json)

        {
            "account": 1,
            "type: "Seed",
            "total_shares": 1000000,
            "share_price": 1.00,
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Funding1)
        + message: {FUNDING_NAME} retrieved successfully.

### Edit Funding [PATCH /funding/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Funding in the form of an integer

+ Request (application/json)

        {
            "account": 1,
            "type: "Seed",
            "total_shares": 1000000,
            "share_price": 2.50,
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Funding1)
        + message: {FUNDING_NAME} retrieved successfully.

### Delete Funding [DELETE /funding/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Funding in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {FUNDING_NAME} removed successfully.

## Groups [/groups]

### Add Group to Account [POST /accounts/{id}/groups]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This is my new group",
            "user": 1
        }

+ Response 200 (application/json)

    + Attributes (AccountGroup1)

### Edit Group [PATCH /groups/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Group in the form of an integer

+ Request (application/json)

        {
            "name": "I can change the Group name",
            "user": 1
        }

+ Response 200 (application/json)

    + Attributes (AccountGroup1)

### Delete Group [DELETE /groups/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Group in the form of an integer

+ Response 204 (application/json)

### Get Users within Group [GET /groups/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[User1, User2])

### Add User to Group [POST /groups/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Group in the form of an integer

+ Request (application/json)

        {
            "user": 1
        }

+ Response 200 (application/json)

    + Attributes (AccountGroup1)

### Remove User from Group [DELETE /groups/{group_id}/users/{user_id}]

+ Parameters
    + group_id: `1` (number, required) - ID of the Group in the form of an integer
    + user_id: `1` (number, required) - ID of the User in the form of an integer

+ Response 204 (application/json)

## Image [/images]

`Image` entities are created via `POST` to a parent objects `/images` path.

### Get Image [GET /images/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Image in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Image1)
        + message: {IMAGE_NAME} retrieved successfully.

### Delete Image [DELETE /images/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Image in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {IMAGE_NAME} removed successfully.

## Node [/nodes]

### View Node [GET /nodes/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Node1)
        + message: {NODE_NAME} retrieved successfully.

### Create Node [POST]

- `display_date` will be defaulted to `create_date` unless specified
- `display_date` cannot be a date in the past
- `type` will be defaulted to `node` unless specified

+ Request (application/json)

        {
            "title": "My new Node!",
            "body": "<h1>How cool</h1><p>HTML is allowed here!</p>",
            "user": 13,
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Node1)
        + message: {NODE_NAME} retrieved successfully.

### Edit Node [PATCH /nodes/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Request (application/json)

        {
            "type": "blog",
            "title": "My New Node",
            "body": "<h1>How Cool</h1><p>HTML is allowed here!</p>"
            "type": "page"
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Node1)
        + message: {NODE_NAME} retrieved successfully.

### Tag Node [POST /nodes/{id}/tags]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Request (application/json)

        {
            "tag": "dinosaur"
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Node1)
        + message: {NODE_NAME} retrieved successfully.

### Remove Tag [DELETE /nodes/{node_id}/tags/{tag_id}]

+ Parameters
    + node_id: `1` (number, required) - ID of the Node in the form of an integer
    + tag_id: `1` (number, required) - ID of the Tag in the form of an integer


+ Response 200 (application/json)
    + Attributes
        + message: {TAG_NAME} retrieved successfully.
        
### Delete Node [DELETE /nodes/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {NODE_NAME} removed successfully.      
             
### Create new Comment [POST /nodes/{id}/comments]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Request (application/json)

        {
            "user": 1,
            "body": "This is incredibly helpful"
        }
        

## Organization [/organizations]

### Get Organization [GET /organizations/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Organization1)
        + message: {ORG_NAME} retrieved successfully.

### Create Organization [POST]

+ Request (application/json)

        {
            "account": 1,
            "name": "A New Organization",
            "description": "Our first NY City Client!",
            "website": "http://example.org",
            "address": "123 Main Street",
            "city": "New York",
            "state": "New York",
            "zip": 10001,
            "phone": "(201) 555-1234"
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Organization1)
        + message: {ORG_NAME} created successfully.

### Edit Organization [PATCH /organizations/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Request (application/json)

        {
            "account": 1,
            "status": 1,
            "name": "A New Organization",
            "description": "Our first NY City Client!",
            "website": "http://example.org",
            "address": "123 Main Street",
            "city": "New York",
            "state": "New York",
            "zip": 10001,
            "phone": "(201) 555-1234"
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Organization1)
        + message: {ORG_NAME} updated successfully.


### Delete Organization [DELETE /organizations/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {ORG_NAME} removed successfully.
           
### Create new Comment [POST /organizations/{id}/comments]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Request (application/json)

        {
            "user": 1,
            "body": "Super excited to have this new client!"
        }
        
+ Response 200 (application/json)
    + Attributes
        + message: {ORG_NAME} removed successfully.

## Product [/products]

### GET Product [GET /products/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Product1)
        + message: {PRODUCT_NAME} retrieved successfully.

### Create new Product [POST /products]

+ Request (application/json)

        {
            "title": "Product name",
            "body": "This product is amazing",
            "price": 79.99,
            "cost": 99.99,
            "category": 2
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Product1)
        + message: {PRODUCT_NAME} created successfully.

### Edit Product [PATCH /products/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Request (application/json)

        {
            "title": "Product Name",
            "body": "",
            "price": 79.99,
            "cost": 99.99,
            "category": 2,
            "status": 1,

        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Product1)
        + message: {PRODUCT_NAME} updated successfully.

### Tag [POST /products/{id}/tags]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Request (application/json)

        {
            "tag": "product tag"
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Product1)
        + message: {TAG_NAME} added successfully.

### Add Image [POST /products/{id}/images]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Product1)
        + message: {IMAGE_NAME} added successfully.

### Delete Product [DELETE /products/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {PRODUCT_NAME} removed successfully.

## Revenue [/revenue]

### View Revenue [GET /revenue/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Revenue in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Revenue1)
        + message: {REVENUE_NAME} retrieved successfully.

### Create new Revenue [POST /revenue]

+ Request (application/json)

        {
            "title": "Our first sale!",
            "body": "This is our first official product sale as a new business!",
            "category": 1,
            "organization": 1,
            "user": 43
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Revenue1)
        + message: {REVENUE_NAME} created successfully.

### Edit Revenue [PATCH /revenue/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Revenue in the form of an integer

+ Request (application/json)

        {
            "title": "Our first sale!",
            "body": "This is our first official product sale as a new business!",
            "category": 1,
            "organization": 1,
            "user": 43
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Revenue1)
        + message: {REVENUE_NAME} updated successfully.

### Delete Revenue [DELETE /revenue/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Revenue in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {REVENUE_NAME} removed successfully.


## Service [/services]

### View Service [GET /services/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Service1)
        + message: {SERVICE_NAME} retrieved successfully.

### Create new Service [POST /services]

+ Request (application/json)

        {
            "title": "Service name",
            "body": "Service description",
            "price": 24.99,
            "type": "service type",
            "category": 1,
            "organization": 1
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Service1)
        + message: {SERVICE_NAME} created successfully.

### Add Image [POST /services/{id}/images]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Service1)
        + message: {IMAGE_NAME} added successfully.

### Edit Service [PATCH /services/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Request (application/json)

        {
            "body": "Revenue type",
            "organization": 1
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Service1)
        + message: {SERVICE_NAME} updated successfully.

### Delete Service [DELETE /services/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {SERVICE_NAME} removed successfully.


## Shareholder [/shareholders]

### View Shareholder [GET /shareholders/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Shareholder in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Shareholder1)
        + message: {SHAREHOLDER_NAME} retrieved successfully.

### Create new Shareholder [POST /shareholders]

+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "Semi Retired",
            "address": "123 Main St",
            "city": "Seattle",
            "state": "WA",
            "zip": 98065,
            "email": "jane.doe@company.com",
            "phone": "555-222-9595",
            "notes": "",
            "shares": 100,
            "funding_round": 2
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Shareholder1)
        + message: {SHAREHOLDER_NAME} retrieved successfully.

### Edit Shareholder [PATCH /shareholders/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Shareholder in the form of an integer

+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "Venture Capitalist",
            "address": "1212 Main St",
            "city": "Seattle",
            "state": "WA",
            "zip": 98101,
            "email": "jane.doe@company.com",
            "phone": "555-222-9595",
            "notes": "Paid by check in person on Tuesday",
            "shares": 1000
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Shareholder1)
        + message: {SHAREHOLDER_NAME} updated successfully.

### Delete Shareholder [DELETE /shareholders/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Shareholder in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {SHAREHOLDER_NAME} removed successfully.

## Slack [/expenses]

### Submit a Slack Message [POST]

+ Request (application/json)

        {
            "text": "Tavro is awesome!",
            "channel": "#tavro",
            "username": "tavro-bot",
            "emoji": ":emoji_name:"
        }

+ Response 200 (application/json)
    + Attributes
        + message: "Slack message posted successfully!"

## Syndicate [/syndicate]

### View Syndicate [GET /syndicate/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Syndicate in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Syndicate1)
        + message: {REVENUE_NAME} retrieved successfully.

### Create new Syndicate [POST /syndicate]

+ Request (application/json)

        {
            "name": "Syndicate Name",
            "leader": 1,
            "investors": [1,3,7]
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Syndicate1)
        + message: {REVENUE_NAME} created successfully.

### Edit Syndicate [PATCH /syndicate/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Syndicate in the form of an integer

+ Request (application/json)

        {
            "name": "Syndicate Name",
            "leader": 1,
            "investors": [1,3]
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Syndicate1)
        + message: {REVENUE_NAME} updated successfully.

### Delete Syndicate [DELETE /syndicate/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Syndicate in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {REVENUE_NAME} removed successfully.


## Tag [/tags]

### Edit Tag [PATCH /tags/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Tag in the form of an integer

+ Request (application/json)

        {
            "tag": "something",
        }

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Tag1)
        + message: {TAG_NAME} updated successfully.

### Delete Tag [DELETE /tags/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Tag in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + message: {TAG_NAME} removed successfully.

## Variable [/variables]

### Get Variable [PATCH /variables/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Variable in the form of an integer

+ Response 200 (application/json)
    + Attributes
        + data (array) - Response data
            + (Variable1)
        + message: {VARIABLE_NAME} updated successfully.
        
