api_get_current_user:
    path: /user.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:getCurrent, _format: json, entity: "users" }
    methods: [GET|OPTIONS]
    requirements:
        id: \d+
        _format:  json|xml

api_get_user:
    path: /users/{id}.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:get, _format: json, entity: "users" }
    methods: [GET|OPTIONS]
    requirements:
        id: \d+
        _format:  json|xml

api_get_all_users:
    path:  /users.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:getAll, _format: json, entity: "users" }
    methods: [GET|OPTIONS]
    requirements:
        _format:  json|xml

api_user_signup:
    path:  /signup.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:post, _format: json, entity: "users" }
    methods: [POST|OPTIONS]
    requirements:
        _format:  json|xml

api_user_change_password:
    path: /change-password
    defaults: { _controller: TavroApiBundle:Entity\User:changePassword, _format: json, entity: "users" }
    methods: [POST|OPTIONS]

api_patch_user:
    path:  /users/{id}.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:patch, _format: json, entity: "users" }
    methods: [PATCH|OPTIONS]
    requirements:
        id: \d+
        _format:  json|xml

api_put_user:
    path:  /users/{id}.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:put, _format: json, entity: "users" }
    methods: [PUT|OPTIONS]
    requirements:
        id: \d+
        _format:  json|xml

api_delete_user:
    path:  /users/{id}.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:delete, _format: json, entity: "users" }
    methods: [DELETE|OPTIONS]
    requirements:
        id: \d+
        _format:  json|xml

api_user_organizations:
    path: /users/{user}/organizations.{_format}
    defaults: { _controller: TavroApiBundle:Entity\User:organizations, _format: json}
    methods: [GET|OPTIONS]
    requirements:
        user: \d+
        _format: json|xml