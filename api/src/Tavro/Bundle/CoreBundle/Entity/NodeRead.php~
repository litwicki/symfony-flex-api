<?php

namespace CamelotMods\Bundle\CoreBundle\Entity;

use Doctrine\ORM\Mapping AS ORM;

use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\ExclusionPolicy;
use JMS\Serializer\Annotation\Expose;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\VirtualProperty;
use Doctrine\ORM\Mapping\Table;

use CamelotMods\Bundle\CoreBundle\Model\Entity;
use CamelotMods\Bundle\CoreBundle\Model\EntityInterface;

/**
 * @ORM\Entity
 * @ORM\Table(name="camelot_node_read", indexes={@ORM\Index(name="USER_NODE_READ", columns={"user_id","node_id"})})
 */
class NodeRead extends Entity implements EntityInterface
{

    /**
     * @ORM\ManyToOne(targetEntity="CamelotMods\Bundle\CoreBundle\Entity\User", inversedBy="nodes_read")
     * @ORM\JoinColumn(name="user_id", referencedColumnName="id", nullable=false)
     */
    private $user;

    /**
     * @ORM\ManyToOne(targetEntity="CamelotMods\Bundle\CoreBundle\Entity\Node", inversedBy="nodes_read",)
     * @ORM\JoinColumn(name="node_id", referencedColumnName="id", nullable=false)
     */
    private $node;

    /**
     * Set user
     *
     * @param \CamelotMods\Bundle\CoreBundle\Entity\User $user
     * @return nodeRead
     */
    public function setUser(\CamelotMods\Bundle\CoreBundle\Entity\User $user)
    {
        $this->user = $user;

        return $this;
    }

    /**
     * Get user
     *
     * @return \CamelotMods\Bundle\CoreBundle\Entity\User
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Set node
     *
     * @param \CamelotMods\Bundle\CoreBundle\Entity\node $node
     * @return nodeRead
     */
    public function setNode(\CamelotMods\Bundle\CoreBundle\Entity\Node $node)
    {
        $this->node = $node;

        return $this;
    }

    /**
     * Get node
     *
     * @return \CamelotMods\Bundle\CoreBundle\Entity\Node
     */
    public function getNode()
    {
        return $this->node;
    }

}
