FORMAT: 1A
HOST: http://api.tavro.dev/api/v1

# Tavro.io API

Private API Documentation.

# Data Structures

## Account1 (object)
+ id: 10001 (number)
+ name: Autobots
+ name_clean: autobots
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## Account2 (object)
+ id: 10002 (number)
+ name: Decepticons
+ name_clean: decepticons
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountGroup1 (object)
+ id: 1 (number)
+ name: Primes
+ account (Account1)
+ user (User1)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountGroup2 (object)
+ id: 2 (number)
+ name: Leaders
+ account (Account2)
+ user (User1)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountGroup3 (object)
+ id: 3 (number)
+ name: Cars
+ account (Account1)
+ user (User2)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)

## AccountUser1 (object)
+ id: 1 (number)
+ account (Account1)
+ user (User1)

## AccountUser2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ user (User2)

## AccountUser3 (object)
+ id: 3 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ user (User3)

## AccountGroupUser1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account_group (AccountGroup1)
+ user (User1)

## AccountGroupUser2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account_group (AccountGroup2)
+ user (User2)

## AccountGroupUser3 (object)
+ id: 3 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account_group (AccountGroup3)
+ user (User3)

## RoleAdmin (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: Administrator (string, required)
+ role: ROLE_ADMIN (string, required)
+ body: Administrators do what they want! (string, required)

## RoleUser (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: User (string, required)
+ role: ROLE_USER (string, required)
+ body: Users do what they want! (string, required)

## RoleDeveloper (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ name: Developer (string, required)
+ role: ROLE_DEVELOPER (string, required)
+ body: Developers do what they want! (string, required)

## Comment1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ user (User1)
+ body: "Before time began, there was the Cube. We know not where it comes from, only that it holds the power to create worlds and fill them with life. That is how our race was born. For a time, we lived in harmony. But like all great power, some wanted it for good, others for evil. And so began the war. A war that ravaged our planet until it was consumed by death, and the Cube was lost to the far reaches of space. We scattered across the galaxy, hoping to find it and rebuild our home. Searching every star, every world. And just when all hope seemed lost, message of a new discovery drew us to an unknown planet called... Earth."

## Comment2 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ user (User2)
+ body: "Legendary warriors, the powers that created us now want us all extinguished. We must join forces, or else we'll all be their slaves. So today you stand with us... or you stand against me."

## Comment3 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ user (User3)
+ body: "There are mysteries to the universe we were never meant to solve. But who we are and why we are here, are not among them. Those answers we carry inside. I am Optimus Prime, and this message is to my Creators: leave planet Earth alone, 'cause I'm coming for you!"

## Contact1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ job_title: Job Title
+ email: null
+ phone: null
+ user (User1)
+ organization (Organization1)
+ person (Person1)

## Contact2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ job_title: Executive
+ email: exec@example.com
+ phone: null
+ user: null
+ organization (Organization1)
+ person (Person2)

## Contact3 (object)
+ id: 3 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ job_title: Mechanic
+ email: mechanic@gmail.com
+ phone: null
+ user (User3)
+ organization (Organization2)
+ person (Person3)

## Expense1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ body: "The explanation of reason for the expense" (string)
+ amount: 154.89
+ user (User1)
+ category (ExpenseCategory1)
+ receipt (File1)
+ comments [Array(Comment1)]
+ tags [Array(Tag1, Tag2)]

## Expense2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ body: "" (string)
+ amount: 12.99
+ user (User2)
+ category (ExpenseCategory2)
+ receipt (File2)
+ comments [Array(Comment2, Comment3)]
+ tags [Array()]

## Expense3 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ expense_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ body: "Subscription to Apple Music" (string)
+ amount: 14.99
+ user (User2)
+ category (ExpenseCategory3)
+ receipt (File3)
+ comments [Array()]
+ tags [Array()]

## ExpenseCategory1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Expense Category Name"
+ account (Account1)

## ExpenseCategory2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Another Expense Category Name"
+ account (Account1)

## ExpenseCategory3 (object)
+ id: 3 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ body: "Category Name"
+ account (Account2)

## File1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-files.amazons3.com/10001/funding/prospectus.pdf" (string, required)
+ bucket: "tavro-files" (string, required)
+ directory: "funding" (string)
+ original_filename: "Untitled-1.pdf" (string, required)
+ mime_type: "application/pdf" (string, required)
+ filesize: 1234567890 (integer, required)

## File2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-assets.amazons3.com/resumes/resume-123456.pdf" (string, required)
+ bucket: "tavro-assets" (string, required)
+ directory: "resumes" (string)
+ original_filename: "resume.pdf" (string, required)
+ mime_type: "application/pdf" (string, required)
+ filesize: 54678765 (integer, required)

## File3 (object)
+ id: 3 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-assets.amazons3.com/header.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "" (string)
+ original_filename: "Mt-Rainier0234.jpeg" (string, required)
+ mime_type: "application/jpeg" (string, required)
+ filesize: 20394029384 (integer, required)

## File4 (object)
+ id: 4 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-files.amazons3.com/10002/funding/prospectus2.pdf" (string, required)
+ bucket: "tavro-files" (string, required)
+ directory: "funding2" (string)
+ original_filename: "Company-Prospectus.pdf" (string, required)
+ mime_type: "application/pdf" (string, required)
+ filesize: 69876789098 (integer, required)

## Funding1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ type: "Seed" (string, required)
+ total_shares: 1000000 (integer, required)
+ share_price: 1.00 (float, required)
+ prospectus (File1)
+ comments [Array()]
+ shareholders [Array(Shareholder1, Shareholder2)]

## Funding2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ type: "Angel" (string, required)
+ total_shares: 1000 (integer, required)
+ share_price: 100.00 (float, required)
+ prospectus (File4)
+ comments [Array(Comment1, Comment2)]
+ shareholders [Array(Shareholder3, Shareholder4, Shareholder5)]

## Image1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-assets.amazons3.com/10001/products/00001.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "products" (string)
+ original_filename: "Picture1.jpeg" (string, required)
+ mime_type: "application/jpeg" (string, required)
+ filesize: 20394029384 (integer, required)
+ height: 100 (integer, required)
+ width: 100 (integer, required)

## Image2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-assets.amazons3.com/10001/products/00002.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "products" (string)
+ original_filename: "Picture2.png" (string, required)
+ mime_type: "application/png" (string, required)
+ filesize: 20394029384 (integer, required)
+ height: 100 (integer, required)
+ width: 100 (integer, required)

## Image3 (object)
+ id: 3 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ aws_url: "https://tavro-assets.amazons3.com/10001/services/service1.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "services" (string)
+ original_filename: "SERVICE_IMAGE.jpg" (string, required)
+ mime_type: "application/jpg" (string, required)
+ filesize: 4562343534 (integer, required)
+ height: 1000 (integer, required)
+ width: 1000 (integer, required)

## Image4 (object)
+ id: 4 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ aws_url: "https://tavro-assets.amazons3.com/10002/products/product-img01.jpg" (string, required)
+ bucket: "tavro-images" (string, required)
+ directory: "products" (string)
+ original_filename: "product.jpg" (string, required)
+ mime_type: "application/jpg" (string, required)
+ filesize: 10876789 (integer, required)
+ height: 1200 (integer, required)
+ width: 760 (integer, required)

## Node1 (object)
+ id: 1 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account1)
+ user (User1)
+ title: "Node Title" (string, required)
+ body: "Lots of text here.." (string)
+ type: "node" (string, required)
+ display_date: `2015-08-05T08:40:51.620Z` (string, required)
+ views: 0 (integer, required)
+ comments [Array(Comment1, Comment2)]

## Node2 (object)
+ id: 2 (number)
+ create_date: `2015-08-05T08:40:51.620Z` (string, required)
+ update_date: `2015-08-05T08:40:51.620Z` (string, required)
+ account (Account2)
+ user (User3)
+ title: "Node Title" (string, required)
+ body: "Lots of text here.." (string)
+ type: "node" (string, required)
+ display_date: `2015-08-05T08:40:51.620Z` (string, required)
+ views: 0 (integer, required)
+ comments [Array(Comment3)]

## Account [/accounts]

### Create [POST /accounts]

+ Request (application/json)

        {
            "body": "This round is ideally for friends and family!",
            "user": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /accounts/1

### Edit [PATCH /accounts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round of funding is exclusive to friends and family.",
            "status": 1
        }

+ Response 204 (application/json)

### Delete [DELETE /accounts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Response 204 (application/json)

### Add User [POST /accounts/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round is ideally for friends and family!",
            "user": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /accounts/1

### Get Users [GET /accounts/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round of funding is exclusive to friends and family.",
            "status": 1
        }

+ Response 200 (application/json)

    + Attributes (array[User1, User2])

### Remove User [DELETE /accounts/{account_id}/users/{user_id}]

+ Parameters
    + account_id: `1` (number, required) - ID of the Account in the form of an integer
    + user_id: `1` (number, required) - ID of the User in the form of an integer

+ Response 204 (application/json)

### Get Groups [GET /accounts/{id}/groups]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round of funding is exclusive to friends and family.",
            "status": 1
        }

+ Response 200 (application/json)

    + Attributes (array[User1, User2])

## Account Group [/account_groups]

### Create [POST /accounts/{id}/groups]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round is ideally for friends and family!",
            "user": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /accounts/1

### Delete [DELETE /groups/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Account Group in the form of an integer

+ Response 204 (application/json)

### Add User [POST /account_groups/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round is ideally for friends and family!",
            "user": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /accounts/1

### Get Users [GET /account_groups/{id}/users]

+ Parameters
    + id: `1` (number, required) - ID of the Account in the form of an integer

+ Request (application/json)

        {
            "body": "This round of funding is exclusive to friends and family.",
            "status": 1
        }

+ Response 200 (application/json)

    + Attributes (array[User1, User2])

### Remove User [DELETE /account_groups/{group_id}/users/{user_id}]

+ Parameters
    + group_id: `1` (number, required) - ID of the Account Group in the form of an integer
    + user_id: `1` (number, required) - ID of the User in the form of an integer

+ Response 204 (application/json)

## Comment [/comments]

### Edit Comment [PATCH /comments/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Comment in the form of an integer

+ Request (application/json)

        {
            "body": "This round of funding is exclusive to friends and family.",
            "status": 1
        }

+ Response 204 (application/json)

### Delete Comment [DELETE /comments/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Comment in the form of an integer

+ Response 204 (application/json)

## Contact [/contacts]

### All Contacts [GET]

+ Response 200 (application/json)

    + Attributes (array[Contact2, Contact4])

### View Contact [GET /contacts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Contact in the form of an integer

+ Response 200 (application/json)

    + Attributes
        + data (array) - Response data
            + (Contact)
        + message: Contact retrieved successfully.

### Create Contact [POST]

+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "CEO",
            "address": "123 Main St",
            "address2": "",
            "city": "Maple Valley",
            "state": "WA",
            "zip": "98065",
            "email": "jane.doe@gmail.com",
            "phone": "555-867-5309",
            "user": 1,
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /contacts/1

### Edit Contact [PATCH /contacts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Contact in the form of an integer

+ Request (application/json)

        {
            "status": 1
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "CEO",
            "address": "123 Main St",
            "address2": "",
            "city": "Maple Valley",
            "state": "WA",
            "zip": "98065",
            "email": "jane.doe@gmail.com",
            "phone": "555-867-5309",
            "user": 1,
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /contacts/1

### Delete Contact [DELETE /contacts/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Contact in the form of an integer

+ Response 204 (application/json)

## Expense [/expenses]

### View Expense [GET /expenses/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Expense in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Expense])

### Create Expense [POST]

+ Request (application/json)

        {
            "body": "Apiary for teams",
            "amount": 1.00
            "expense_date": "2009-02-03",
            "category": 3,
            "organization": 10
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /expenses/1

### Delete Expense [DELETE /expenses/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Expense in the form of an integer

+ Response 204 (application/json)

### Tag [POST /expenses/{id}/tags]

+ Parameters
    + id: `1` (number, required) - ID of the Expense in the form of an integer

+ Request (application/json)

        {
            "tag": "tags are always lowercased"
        }

+ Response 201 (application/json)

    + Headers

            Location: /tags/1

## File [/files]

### Create [POST /files]

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="files[file]"; filename="document.pdf"
        Content-Type: applicationpdf
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 201 (application/json)

    + Headers

            Location: /files/{id}

### View File [GET /files/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the File in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[File])

### Delete File [DELETE /files/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the File in the form of an integer

+ Response 204 (application/json)

## Funding Round [/funding_rounds]

### View Funding Round [GET /funding_rounds/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Funding Round in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Funding Round])

### Create Funding Round [POST]

+ Request (application/json)

        {
            "type": "angel",
            "share_price": 9.99,
            "total_shares": 500000,
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /funding_rounds/1

### Edit Funding Round [PATCH /funding_rounds/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Funding Round in the form of an integer

+ Request (application/json)

        {
            "type": "angel",
            "share_price": 9.99,
            "total_shares": 600000,
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /funding_rounds/1

### Delete Funding Round [DELETE /funding_rounds/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Funding Round in the form of an integer

+ Response 204 (application/json)

## Image [/images]

### View Image [GET /images/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Image in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Image])

### Delete Image [DELETE /images/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Image in the form of an integer

+ Response 204 (application/json)

## Node [/nodes]

### All Nodes [GET /nodes]

+ Response 200 (application/json)

    + Attributes (array[Simple Node, Simple Node2])

### View Node [GET /nodes/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Node])

### Create Node [POST]

- `display_date` will be defaulted to `create_date` unless specified
- `display_date` cannot be a date in the past
- `type` will be defaulted to `node` unless specified

+ Request (application/json)

        {
            "title": "My new Node!",
            "body": "<h1>How cool</h1><p>HTML is allowed here!</p>",
            "user": 13,
        }

+ Response 201 (application/json)

    + Headers

            Location: /nodes/{id}

### Edit Node [PATCH /nodes/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Request (application/json)

        {
            "type": "blog",
            "title": "My New Node",
            "body": "<h1>How Cool</h1><p>HTML is allowed here!</p>"
        }

+ Response 201 (application/json)

    + Headers

            Location: /nodes/{id}

### Tag [POST /nodes/{id}/tags]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Request (application/json)

        {
            "tag": "tags are always lowercased"
        }

+ Response 201 (application/json)

    + Headers

            Location: /tags/1

### Delete Node [DELETE /nodes/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Node in the form of an integer

+ Response 204 (application/json)

## Organization [/organizations]

### All Organizations [GET /organizations]

+ Response 200 (application/json)

    + Attributes (array[Marvel Organization, DC Comics Organization])

### View Organization [GET /organizations/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Organization])

### Create Organization [POST]

+ Request (application/json)

        {
            "title": "Spawn Comics",
            "owner": 13,
            "users": [1,43]
        }

+ Response 201 (application/json)

    + Headers

            Location: /organizations/{id}

### Edit Organization [PATCH /organizations/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Request (application/json)

        {
            "title": "Spawn Comics",
            "owner": 43,
            "status": 1,
            "users": [43]
        }

+ Response 201 (application/json)

    + Headers

            Location: /organizations/{id}


### Delete Organization [DELETE /organizations/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Response 204 (application/json)

## Product [/products]

### All Products [GET]

+ Response 200 (application/json)

    + Attributes (array[Product])

### View Product [GET /products/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Organization in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Product])

### Create Product [POST /products]

+ Request (application/json)

        {
            "title": "Product name",
            "body": "This product is amazing",
            "price": 79.99,
            "cost": 99.99,
            "category": 2
        }

+ Response 201 (application/json)

    + Headers

            Location: /products/{id}

### Edit Product [PATCH /products/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Request (application/json)

        {
            "title": "Product Name",
            "body": "",
            "price": 79.99,
            "cost": 99.99,
            "category": 2,
            "status": 1,

        }

+ Response 201 (application/json)

    + Headers

            Location: /products/{id}

### Tag [POST /products/{id}/tags]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Request (application/json)

        {
            "tag": "tags are always lowercased"
        }

+ Response 201 (application/json)

    + Headers

            Location: /tags/1

### Add Image [POST /products/{id}/images]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 201 (application/json)

    + Headers

            Location: /images/{id}

### Delete Product [DELETE /products/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Product in the form of an integer

+ Response 204 (application/json)

## Revenue [/revenue]

### All Revenue [GET]

+ Response 200 (application/json)

    + Attributes (array[Revenue])

### View Revenue [GET /revenue/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Revenue in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Revenue])

### Create Revenue [POST /revenue]

+ Request (application/json)

        {
            "title": "Our first sale!",
            "body": "This is our first official product sale as a new business!",
            "category": 1,
            "organization": 1,
            "organization": 13,
            "user": 43
        }

+ Response 201 (application/json)

    + Headers

            Location: /revenue/{id}

### Edit Revenue [PATCH /revenue/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Revenue in the form of an integer

+ Request (application/json)

        {
            "title": "Our first sale!",
            "body": "This is our first official product sale as a new business!",
            "category": 1,
            "organization": 1,
            "organization": 13,
            "user": 43
        }

+ Response 201 (application/json)

    + Headers

            Location: /revenue/1

### Delete Revenue [DELETE /revenue/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Revenue in the form of an integer

+ Response 204 (application/json)

## Service [/services]

### All Services [GET]

+ Response 200 (application/json)

    + Attributes (array[Service])

### View Service [GET /services/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Service])

### Create Service [POST /services]

+ Request (application/json)

        {
            "title": "Service name",
            "body": "Service description",
            "price": 24.99,
            "type": "service type",
            "category": 1,
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /services/{id}

### Add Image [POST /services/{id}/images]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Request (multipart/form-data; boundary=---BOUNDARY)

        -----BOUNDARY
        Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
        Content-Type: image/jpeg
        Content-Transfer-Encoding: base64

        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
        HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
        AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
        AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
        -----BOUNDARY

+ Response 201 (application/json)

    + Headers

            Location: /images/{id}

### Edit Service [PATCH /services/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Request (application/json)

        {
            "body": "Revenue type",
            "organization": 1
        }

+ Response 201 (application/json)

    + Headers

            Location: /services/{id}

### Delete Service [DELETE /services/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Service in the form of an integer

+ Response 204 (application/json)

## Shareholder [/shareholders]

### All Shareholders [GET]

+ Response 200 (application/json)

    + Attributes (array[Shareholder])

### View Shareholder [GET /shareholders/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Shareholder in the form of an integer

+ Response 200 (application/json)

    + Attributes (array[Shareholder])

### Create Shareholder [POST /shareholders]

+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "Semi Retired",
            "address": "123 Main St",
            "city": "Seattle",
            "state": "WA",
            "zip": 98065,
            "email": "jane.doe@company.com",
            "phone": "555-222-9595",
            "notes": "",
            "shares": 100,
            "funding_round": 2
        }

+ Response 201 (application/json)

    + Headers

            Location: /shareholders/{id}

### Edit Shareholder [PATCH /shareholders/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Shareholder in the form of an integer

+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Doe",
            "title": "Venture Capitalist",
            "address": "1212 Main St",
            "city": "Seattle",
            "state": "WA",
            "zip": 98101,
            "email": "jane.doe@company.com",
            "phone": "555-222-9595",
            "notes": "Paid by check in person on Tuesday",
            "shares": 1000
        }

+ Response 201 (application/json)

    + Headers

            Location: /shareholders/{id}

### Delete Shareholder [DELETE /shareholders/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Shareholder in the form of an integer

+ Response 204 (application/json)

## Tag [/tags]

### Edit Tag [PATCH /tags/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Comment in the form of an integer

+ Request (application/json)

        {
            "tag": "tags are always lowercased",
            "body": "Some tags may require a description, who knows?!"
        }

+ Response 204 (application/json)

### Delete Tag [DELETE /tags/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Tag in the form of an integer

+ Response 204 (application/json)

## Variable [/variables]

### Edit Variable [PATCH /variables/{id}]

+ Parameters
    + id: `1` (number, required) - ID of the Variable in the form of an integer

+ Request (application/json)

        {
            "body": "The body or value"
        }

+ Response 204 (application/json)
