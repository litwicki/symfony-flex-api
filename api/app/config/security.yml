security:
    role_hierarchy:
        ROLE_API_USER: [ROLE_USER]
        ROLE_DEVELOPER: [ROLE_USER]
        ROLE_ADMIN: [ROLE_DEVELOPER]
        ROLE_SUPERUSER: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        main:
            entity:
                class: Tavro\Bundle\CoreBundle\Entity\User
                property: username
        api_key_user_provider:
            id: tavro.user_provider

    encoders:
        Tavro\Bundle\CoreBundle\Entity\User:
             id: tavro.password_encoder
        Symfony\Component\Security\Core\User\User: plaintext

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            pattern:   ^/api/v1/(?!signup)
            stateless: true
            guard:
                authenticators:
                    - tavro.jwt_token_authenticator

    access_control:
        - { path: ^/api/v1/auth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1, roles: [ROLE_USER, ROLE_API_USER] }
        - { path: ^/(css|js), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(_wdt|_profiler), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: [ROLE_USER] }