services:

    tavro.aws_credentials:
        class: Aws\Credentials\Credentials
        arguments: [%aws_access_key_id%, %aws_secret_access_key%]

    tavro.aws_s3:
        class: Aws\S3\S3Client
        arguments:
            -
                #key: %aws_access_key_id%
                #secret: %aws_secret_access_key%
                region: %aws_s3_region%
                version: %aws_sdk_version%
                credentials: "@tavro.aws_credentials"

    tavro.aws_sns:
        class: Aws\S3\SnsClient
        arguments:
            -
                #key: %aws_access_key_id%
                #secret: %aws_secret_access_key%
                region: %aws_s3_region%
                version: %aws_sdk_version%
                credentials: "@tavro.aws_credentials"

    get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags:
            - { name: serializer.normalizer }
    pdo:
        class: PDO
        arguments:
            # dsn:      "mysql:dbname=%database_name%"
            dsn:      "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            user:     %database_user%
            password: %database_password%
        calls:
            - [setAttribute, [3, 2]] # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION

    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        public:    false
        arguments:
            - "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            - { db_table: sessions, db_id_col: session_id, db_data_col: session_data, db_time_col: session_time, db_lifetime_col: session_lifetime, db_username: %database_user%, db_password: %database_password% }

    monolog.handler.logentries:
        class: Monolog\Handler\LogEntriesHandler
        arguments:
            token: %logentries_token%