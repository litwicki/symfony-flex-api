liip_imagine:

    filter_sets:

        # ================
        # Images
        # ================
        tile:
            cache: images
            data_loader: tavro.data_loader.images
            quality: 100
            filters:
                crop: { start: [0,0], size: [120, 120] }
                upscale: { min: [120, 120] }
                background: { color: '#FFFFFF' }

        thumbnail:
            cache: images
            data_loader: tavro.data_loader.images
            quality: 80
            filters:
                crop: { start: [0,0], size: [160, 90] }
                upscale: { min: [160, 90] }
                background: { color: '#FFFFFF' }

        # ================
        # Avatars
        # ================
        tiny_avatar:
            cache: avatars
            data_loader: tavro.data_loader.avatars
            quality: 80
            filters:
                thumbnail: { size: [32, 32], mode: outbound }
        avatar:
            cache: avatars
            data_loader: tavro.data_loader.avatars
            quality: 100
            filters:
                thumbnail: { size: [120, 120], mode: outbound }

        avatar_large:
            cache: avatars
            data_loader: tavro.data_loader.avatars
            quality: 100
            filters:
                thumbnail: { size: [250, 250], mode: outbound }
                upscale: { min: [250, 250] }

services:

    ### RESOLVERS ###
    files.liip_imagine.cache.resolver.amazon_s3:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver
        arguments:
            - "@tavro.aws_s3"
            - "%file_bucket%"
        tags:
            - { name: 'liip_imagine.cache.resolver', resolver: 'files' }

    images.liip_imagine.cache.resolver.amazon_s3:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver
        arguments:
            - "@tavro.aws_s3"
            - "%file_bucket%"
        tags:
            - { name: 'liip_imagine.cache.resolver', resolver: 'images' }

    ### DATA LOADERS ###
    liip_imagine.binary.loader.tavro.data_loader.files:
        class: "%liip_imagine.binary.loader.stream.class%"
        arguments:
            - 'tavro://files/'
        tags:
            - { name: 'liip_imagine.binary.loader', loader: 'tavro.data_loader.files' }

    liip_imagine.binary.loader.tavro.data_loader.images:
        class: "%liip_imagine.binary.loader.stream.class%"
        arguments:
            - 'tavro://images/'
        tags:
            - { name: 'liip_imagine.binary.loader', loader: 'tavro.data_loader.images' }