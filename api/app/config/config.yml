imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: liip.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    assets: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id: snc_redis.session.handler
    serializer:
        enabled: true
    fragments:       ~
    http_method_override: true

# Monolog Configuration
monolog:
    use_microseconds: false
    handlers:
        logentries:
            type: service
            id: '@monolog.handler.logentries'
            level: error

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    cache:  false
    form_themes:
        - 'bootstrap_3_layout.html.twig'
    globals:
        app_version: %app_version%
        app_hostname: %app_hostname%
        api_hostname: %api_hostname%
        app_email: %app_email%
        app_email_name: %app_email_name%
        app_debug: %kernel.debug%
        amazon_s3_url: %amazon_s3_url%
        asset_bucket: %asset_bucket%
        qbo_request_token_uri: %qbo_request_token_uri%
        qbo_access_token_uri: %qbo_access_token_uri%
        qbo_request_uri: %qbo_request_uri%

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        schema_filter: ~^(?!sessions)~

    orm:
        default_entity_manager: main
        auto_generate_proxy_classes: %kernel.debug%
        mappings:
            TavroCoreBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    username: %mailer_user%
    password: %mailer_password%
    host: %mailer_host%
    port: %mailer_port%

stof_doctrine_extensions:
    default_locale: en_US

    # Only used if you activated the Uploadable extension
    uploadable:
        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
        default_file_path:       %kernel.root_dir%/../web/uploads

        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter

        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
    orm:
        default:
            sluggable: true

knp_gaufrette:
    stream_wrapper:
        protocol: tavro
    adapters:
        assets:
            aws_s3:
                service_id: tavro.aws_s3
                bucket_name: %asset_bucket%
                options:
                    create: true
                    acl: public-read
        images:
            aws_s3:
                service_id: tavro.aws_s3
                bucket_name: %image_bucket%
                options:
                    create: true
                    acl: public-read
        avatars:
            aws_s3:
                service_id: tavro.aws_s3
                bucket_name: %image_bucket%
                options:
                    directory: avatars
                    create: true
                    acl: public-read

    filesystems:
        assets:
            adapter:    assets
            alias:      assets_filesystem
        images:
            adapter:    images
            alias:      images_filesystem

lexik_jwt_authentication:
    pass_phrase: %jwt_token_passphrase%
    token_ttl: %jwt_token_ttl%
    public_key_path: ~
    private_key_path: ~

aws:
    version: latest
    region: us-west-2
    credentials:
        key: ~
        secret: '%secret%'
    DynamoDb:
        region: us-west-2
        credentials: "@tavro.aws_credentials"
    S3:
        version: '2006-03-01'
        credentials: "@tavro.aws_credentials"
    Sqs:
        credentials: "@tavro.aws_credentials"