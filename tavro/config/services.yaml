# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: '%env(LOCALE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
#    App\:
#        resource: '../src/*'
#        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    tavro_api.subscriber.exception:
        class: Tavro\Bundle\ApiBundle\EventSubscriber\Exception\Dev\ExceptionSubscriber
        tags:
            - { name: kernel.event_subscriber }
        arguments: ["@tavro_serializer", "@tavro.logging.exception"]

    tavro.aws_credentials:
            class: Aws\Credentials\Credentials
        arguments: ["%aws_access_key_id%", "%aws_secret_access_key%"]

    tavro.aws_s3:
        class: Aws\S3\S3Client
        arguments:
            -
                #key: "%aws_access_key_id%"
                #secret: "%aws_secret_access_key%"
                region: "%aws_s3_region%"
                version: "%aws_sdk_version%"
                credentials: "@tavro.aws_credentials"

    tavro.aws_sns:
        class: Aws\S3\SnsClient
        arguments:
            -
                #key: "%aws_access_key_id%"
                #secret: "%aws_secret_access_key%"
                region: "%aws_s3_region%"
                version: "%aws_sdk_version%"
                credentials: "@tavro.aws_credentials"

    get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags:
            - { name: serializer.normalizer }
    pdo:
        class: PDO
        arguments:
            -
                dsn:      "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
        calls:
            - [setAttribute, [3, 2]] # \PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION

    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        public:    false
        arguments:
            - "mysql:host=%database_host%;port=%database_port%;dbname=%database_name%"
            - { db_table: sessions, db_id_col: session_id, db_data_col: session_data, db_time_col: session_time, db_lifetime_col: session_lifetime, db_username: "%database_user%", db_password: "%database_password%" }

    monolog.handler.logentries:
        class: Monolog\Handler\LogEntriesHandler
        arguments: ["%logentries_token%"]

    aws:
        version: latest
        region: us-west-2
        credentials:
            key: ~
            secret: "%secret%"
        DynamoDb:
            region: us-west-2
            credentials: "@tavro.aws_credentials"
        S3:
            version: '2006-03-01'
            credentials: "@tavro.aws_credentials"
        Sqs:
            credentials: "@tavro.aws_credentials"
        Sns:
            credentials: "@tavro.aws_credentials"

    litwicki_chargify:
        test_mode: "%kernel.debug%"
        data_format: "json"
        route_prefix: "/billing"
        domain: "%chargify_domain%"
        api_key: "%chargify_api_key%"
        shared_key: "%chargify_shared_key%"
        direct:
            api_id: "%chargify_api_id%"
            api_secret: "%chargify_api_secret%"
            api_password: "%chargify_api_password%"
